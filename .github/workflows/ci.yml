name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "**"
  workflow_dispatch:

env:
  FOUNDRY_PROFILE: ci

jobs:
  lint:
    strategy:
      fail-fast: true

    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Sol Fmt
        run: |
          forge fmt --check
  
  analyze:
    strategy:
      matrix:
        python-version: [3.8]
        slither-version: [0.10.0]

    name: Slither
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Slither
        run: python3 -m pip install slither-analyzer==${{ matrix.slither-version }}

      - name: Static analysis
        run: slither .

  check:
    strategy:
      fail-fast: true

    name: Forge Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Forge build
        run: |
          forge --version
          forge build --sizes
        id: build

      - name: Run Forge tests
        run: |
          forge test -f $RPC_ARBITRUM -vvv
        id: test
        env: 
          RPC_ARBITRUM: ${{ secrets.RPC_ARBITRUM }}

  coverage:
    name: Forge Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Forge coverage
        run: forge coverage -f $RPC_ARBITRUM  --report lcov
        env: 
          RPC_ARBITRUM: ${{ secrets.RPC_ARBITRUM }}

      - name: Report Coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./lcov.info        
